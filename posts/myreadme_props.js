import projectConfig from '/pagic.config.js';
export default {
    config: { "root": "/", ...projectConfig, branch: 'master' },
    'pagePath': "posts/myreadme.md",
    'layoutPath': "posts/_layout.tsx",
    'outputPath': "posts/myreadme.html",
    'title': "Build personal blog at top speed",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h1>Driven by Deno + react and escorted by Vercel, build personal blog at top speed</h1>\n<blockquote>\n<p>In Chinese Kung Fu, \'in the world of kung fu speed determines the winner\'. In the world of programming, how to quickly build a blog of your own? Then pagic + versel should be a good choice!</p>\n</blockquote>\n<h2 id="pagic">Pagic<a class="anchor" href="#pagic">§</a></h2>\n<p><a href="https://github.com/xcatliu/pagic">Pagic</a> It is a static website generator driven by DeNO + react. It has simple configuration, supports rendering MD / TSX files into static pages, and has a large number of official or third-party themes and plug-ins to extend, which means that you can freely develop and customize your favorite theme style or function plug-ins. What are the advantages of pagic over other static website generators?</p>\n<div class="table_wrapper"><table>\n<thead>\n<tr>\n<th></th>\n<th>Pagic</th>\n<th>VuePress</th>\n<th>Hexo</th>\n<th>Jekyll</th>\n<th>Hugo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Support <code>md</code></td>\n<td>✓</td>\n<td>✓</td>\n<td>✓</td>\n<td>✓</td>\n<td>✓</td>\n</tr>\n<tr>\n<td>React/Vue</td>\n<td>✓</td>\n<td>✓</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SPA</td>\n<td>✓</td>\n<td>✓</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Allow <code>tsx</code> in config</td>\n<td>✓</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>...</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div>\n<p>Pagic stands on the shoulders of giants and refers to the config options and documents of some other static site generators. Hereby, <a href="https://github.com/xcatliu/pagic">Pagic</a>  would like to express her sincere thanks to these open source projects and communities.</p>\n<p>How to use such a good pagic?</p>\n<p>First, install <a href="https://github.com/denoland/deno">Deno</a>:</p>\n<pre class="language-autoit"><code class="language-autoit"># Shell <span class="token punctuation">(</span>Mac<span class="token punctuation">,</span> Linux<span class="token punctuation">)</span><span class="token punctuation">:</span>\ncurl <span class="token operator">-</span>fsSL https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>install<span class="token operator">/</span>install<span class="token punctuation">.</span>sh | sh\n</code></pre>\n<p><img src="../assets/myreadme/1.png" alt="Install Deno"></p>\n<p>Then, install the latest version of <a href="https://github.com/xcatliu/pagic">Pagic</a>  :</p>\n<pre class="language-autoit"><code class="language-autoit">deno install <span class="token operator">-</span><span class="token operator">-</span>unstable <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>read <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>write <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>net <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>run <span class="token operator">-</span><span class="token operator">-</span>name<span class="token operator">=</span>pagic https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>pagic<span class="token operator">/</span>mod<span class="token punctuation">.</span>ts\n</code></pre>\n<p><img src="../assets/myreadme/2.png" alt="Install Pagic"></p>\n<p>Initialize the <a href="https://github.com/xcatliu/pagic">Pagic</a> project :</p>\n<pre class="language-autoit"><code class="language-autoit">mkdir site <span class="token operator">&amp;</span><span class="token operator">&amp;</span> cd site <span class="token operator">&amp;</span><span class="token operator">&amp;</span> echo <span class="token string">"export default {};"</span> <span class="token operator">></span> pagic<span class="token punctuation">.</span>config<span class="token punctuation">.</span>ts <span class="token operator">&amp;</span><span class="token operator">&amp;</span> echo <span class="token string">"# Hello world"</span> <span class="token operator">></span> README<span class="token punctuation">.</span>md\n</code></pre>\n<p><img src="../assets/myreadme/3.png" alt="Pagic init"></p>\n<p>Run pagic build:</p>\n<pre class="language-autoit"><code class="language-autoit">pagic build <span class="token operator">-</span><span class="token operator">-</span>watch <span class="token operator">-</span><span class="token operator">-</span>serve\n</code></pre>\n<p>Now you can see the page of <strong>Hello world</strong> by visiting <code>127.0.0.1:8000</code>：</p>\n<p><img src="../assets/myreadme/4.png" alt="Pagic build"></p>\n<h2 id="vercel">Vercel<a class="anchor" href="#vercel">§</a></h2>\n<p><a href="https://vercel.com/">Vercel</a> is a cloud platform for static sites and serverless functions, which fully conforms to your workflow. It enables developers to host websites and web services, which can be deployed instantly, expanded automatically, and without any supervision, all of which do not need to be configured.</p>\n<p>Deploy to [Versel](<a href="https://vercel.com/%EF%BC%89We">https://vercel.com/）We</a> need to create a file like <code>deploy-vercel.sh</code>:</p>\n<pre class="language-autoit"><code class="language-autoit">!<span class="token operator">/</span>bin<span class="token operator">/</span>sh\n\n# Install deno\ncurl <span class="token operator">-</span>fsSL https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>install<span class="token operator">/</span>install<span class="token punctuation">.</span>sh | sh\n\n# Install pagic\n<span class="token operator">/</span>vercel<span class="token operator">/</span><span class="token punctuation">.</span>deno<span class="token operator">/</span>bin<span class="token operator">/</span>deno install <span class="token operator">-</span><span class="token operator">-</span>unstable <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>read <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>write <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>net https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>pagic<span class="token operator">/</span>mod<span class="token punctuation">.</span>ts\n\n# Pagic build\n<span class="token operator">/</span>vercel<span class="token operator">/</span><span class="token punctuation">.</span>deno<span class="token operator">/</span>bin<span class="token operator">/</span>deno run <span class="token operator">-</span><span class="token operator">-</span>unstable <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>read <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>write <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>net <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>run https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>pagic<span class="token operator">/</span>mod<span class="token punctuation">.</span>ts build\n</code></pre>\n<p>Then create the <code>package.json</code> :</p>\n<pre class="language-autoit"><code class="language-autoit">{\n    <span class="token string">"scripts"</span><span class="token punctuation">:</span> {\n        <span class="token string">"deploy:vercel"</span><span class="token punctuation">:</span> <span class="token string">"sh deploy-vercel.sh"</span>\n    }\n}\n</code></pre>\n<p>Vercel supports GitHub, Gitlab, Bitbucket and other login methods：</p>\n<p><img src="../assets/myreadme/5.png" alt="Vercal login"></p>\n<p>I use GitHub a lot, so I build a new repository on GitHub named <code>pagic_template</code> :</p>\n<p><img src="../assets/myreadme/6.png" alt="Creat new repository"></p>\n<p>Then submit the local code to Github：</p>\n<p><img src="../assets/myreadme/7.png" alt="Pagic commit to Github"></p>\n<p>Next, complete the following steps on the <a href="https://vercel.com/">Vercel</a> website:</p>\n<ol>\n<li>On <a href="https://vercel.com/dashboard">Home</a>, click Import Project</li>\n<li><a href="https://vercel.com/import/git">Fill in</a> warehouse address, from Github <a href="https://vercel.com/import">import</a> the warehouse to be deployed, click continue</li>\n<li>Configure project information</li>\n</ol>\n<ul>\n<li>Fill in the project name, the framework defaults to Other</li>\n<li>Packaging and output configuration, build command: <code>npm run deploy:vercel</code> Output directory: <code>dist</code> (You can also fill in according to your own configuration)</li>\n</ul>\n<p><img src="../assets/myreadme/8.png" alt="Pagic Package"></p>\n<ol start="4">\n<li>Click Deploy and wait for the deployment to complete to access 🎊 :</li>\n</ol>\n<p><img src="../assets/myreadme/9.png" alt="Vercal Deploy"></p>\n<h2 id="blog">Blog<a class="anchor" href="#blog">§</a></h2>\n<p>Currently, Pagic supports three themes: Default, DOC, Blog, we try to modify the <code>pagic.config.ts</code> file to enable Pagic\'s blog mode:</p>\n<pre class="language-autoit"><code class="language-autoit">export <span class="token keyword">default</span> {\n    theme<span class="token punctuation">:</span> <span class="token string">\'blog\'</span><span class="token punctuation">,</span>\n    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'blog\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'pagic template\'</span><span class="token punctuation">,</span>\n    description<span class="token punctuation">:</span> <span class="token string">\'Use this template to create a Pagic site with the blog theme.\'</span><span class="token punctuation">,</span>\n    github<span class="token punctuation">:</span> <span class="token string">\'<a class="token url-link" href="https://github.com/hu-qi/pagic_template">https://github.com/hu-qi/pagic_template</a>\'</span><span class="token punctuation">,</span>\n    blog<span class="token punctuation">:</span> {\n        root<span class="token punctuation">:</span> <span class="token string">\'/posts/\'</span><span class="token punctuation">,</span>\n        social<span class="token punctuation">:</span> {\n          github<span class="token punctuation">:</span> <span class="token string">\'hu-qi/pagic_template\'</span><span class="token punctuation">,</span>\n          email<span class="token punctuation">:</span> <span class="token string">\'<a class="token email-link" href="mailto:huqi@gpdi.com">huqi@gpdi.com</a>\'</span><span class="token punctuation">,</span>\n          twitter<span class="token punctuation">:</span> <span class="token string">\'huqii\'</span><span class="token punctuation">,</span>\n          v2ex<span class="token punctuation">:</span> <span class="token string">\'huqi\'</span><span class="token punctuation">,</span>\n          zhihu<span class="token punctuation">:</span> <span class="token string">\'fashaoge\'</span>\n        }\n      }\n}<span class="token comment">;</span>\n\n</code></pre>\n<p>In the above code, we have configured Title, description and other parameters for the blog. Among them, social can configure our social accounts. By default, it supports Github, Email, Twitter, V2ex, Zhihu. Of course, you can also develop your own themes or plug-ins to customize What you want.\n<img src="../assets/myreadme/10.png" alt="Pagic Nav"></p>\n<p>Then we started to improve the navigation, classification, tags, external links, etc. that are commonly used in blogs. At this time, we need to add some directories, such as about, archive, links, etc., for unified management, we put all these folders in the src directory Below, our directory structure is as follows:</p>\n<pre class="language-autoit"><code class="language-autoit">site                          \n├─ dist                       <span class="token operator">/</span><span class="token operator">/</span> output   \n├─ src                        <span class="token operator">/</span><span class="token operator">/</span> input\n│  ├─ about                   \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  ├─ archives                \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  ├─ assets                  \n│  ├─ categories              \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  ├─ links                   \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  ├─ posts                   <span class="token operator">/</span><span class="token operator">/</span> maybe write somethings\n│  ├─ tags                    \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  └─ README<span class="token punctuation">.</span>md               <span class="token operator">/</span><span class="token operator">/</span> homepage\n├─ README<span class="token punctuation">.</span>md                  \n├─ deploy<span class="token operator">-</span>vercel<span class="token punctuation">.</span>sh           \n├─ package<span class="token punctuation">.</span>json               \n└─ pagic<span class="token punctuation">.</span>config<span class="token punctuation">.</span>ts            \n</code></pre>\n<p>In terms of configuration, we added nav and set srcDir to src:</p>\n<pre class="language-diff"><code class="language-diff">export default {\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span>   srcDir: \'src\',\n<span class="token prefix inserted">+</span>   nav: [\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Homepage\',\n<span class="token prefix inserted">+</span>         link: \'/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-home-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Categories\',\n<span class="token prefix inserted">+</span>         link: \'/categories/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-category-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Tags\',\n<span class="token prefix inserted">+</span>         link: \'/tags/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-tag-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'About\',\n<span class="token prefix inserted">+</span>         link: \'/about/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-about-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Archives\',\n<span class="token prefix inserted">+</span>         link: \'/archives/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-box-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Friends\',\n<span class="token prefix inserted">+</span>         link: \'/links/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-link-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>     ],\n</span>}\n</code></pre>\n<p>On the mobile side, Pagic also has a good experience:\n<img src="../assets/myreadme/11.png" alt="Pagic in Mobile"></p>\n<p>Then we write articles in the form of markdown in the posts directory. We can add some fields to the header of the .md file for classification statistics, such as:</p>\n<pre class="language-autoit"><code class="language-autoit"><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\ntitle<span class="token punctuation">:</span> Driven by DeNO <span class="token operator">+</span> react <span class="token operator">and</span> escorted by vercel<span class="token punctuation">,</span> build personal blog at top speed\nauthor<span class="token punctuation">:</span> huqi\ndate<span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">02</span><span class="token operator">/</span><span class="token number">04</span>\ncover<span class="token punctuation">:</span> <span class="token string">\'<a class="token url-link" href="https://assets.vercel.com/image/upload/v1595320886/front/home/globe-texture.jpg">https://assets.vercel.com/image/upload/v1595320886/front/home/globe-texture.jpg</a>\'</span>\ncategories<span class="token punctuation">:</span>\n<span class="token operator">-</span> Blog\ntags<span class="token punctuation">:</span>\n<span class="token operator">-</span> Deno\n<span class="token operator">-</span> React\n<span class="token operator">-</span> Pagic\n<span class="token operator">-</span> Vercel\n<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\n</code></pre>\n<p>After writing some articles, our blog looks very rich!</p>\n<p><img src="../assets/myreadme/12.png" alt="Vercal Deploy"></p>\n<p>At this point, when we submit the code to the remote warehouse, it will be automatically deployed to Vercal. In the future, every time we write an article and submit it to the remote warehouse, Vercal will be able to automatically deploy updates, which is great!</p>\n<p>Copy Code, Copy World! <a href="https://github.com/hu-qi/pagic_template">https://github.com/hu-qi/pagic_template</a></p>'
        } }),
    'head': React.createElement(React.Fragment, null,
        React.createElement("link", { crossOrigin: "anonymous", href: "https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css", integrity: "sha384-AfEj0r4/OFrOo5t7NnNe46zW/tFgW6x/bCJG8FqQCEo3+Aro6EYUG4+cU+KJWu/X", rel: "stylesheet" })),
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { src: "https://cdn.pagic.org/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { src: "https://cdn.pagic.org/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "/index.js", type: "module" })),
    'contentTitle': React.createElement("h1", { key: "0" }, "Driven by Deno + react and escorted by Vercel, build personal blog at top speed"),
    'contentBody': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<blockquote>\n<p>In Chinese Kung Fu, \'in the world of kung fu speed determines the winner\'. In the world of programming, how to quickly build a blog of your own? Then pagic + versel should be a good choice!</p>\n</blockquote>\n<h2 id="pagic">Pagic<a class="anchor" href="#pagic">§</a></h2>\n<p><a href="https://github.com/xcatliu/pagic">Pagic</a> It is a static website generator driven by DeNO + react. It has simple configuration, supports rendering MD / TSX files into static pages, and has a large number of official or third-party themes and plug-ins to extend, which means that you can freely develop and customize your favorite theme style or function plug-ins. What are the advantages of pagic over other static website generators?</p>\n<div class="table_wrapper"><table>\n<thead>\n<tr>\n<th></th>\n<th>Pagic</th>\n<th>VuePress</th>\n<th>Hexo</th>\n<th>Jekyll</th>\n<th>Hugo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Support <code>md</code></td>\n<td>✓</td>\n<td>✓</td>\n<td>✓</td>\n<td>✓</td>\n<td>✓</td>\n</tr>\n<tr>\n<td>React/Vue</td>\n<td>✓</td>\n<td>✓</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SPA</td>\n<td>✓</td>\n<td>✓</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Allow <code>tsx</code> in config</td>\n<td>✓</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>...</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table></div>\n<p>Pagic stands on the shoulders of giants and refers to the config options and documents of some other static site generators. Hereby, <a href="https://github.com/xcatliu/pagic">Pagic</a>  would like to express her sincere thanks to these open source projects and communities.</p>\n<p>How to use such a good pagic?</p>\n<p>First, install <a href="https://github.com/denoland/deno">Deno</a>:</p>\n<pre class="language-autoit"><code class="language-autoit"># Shell <span class="token punctuation">(</span>Mac<span class="token punctuation">,</span> Linux<span class="token punctuation">)</span><span class="token punctuation">:</span>\ncurl <span class="token operator">-</span>fsSL https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>install<span class="token operator">/</span>install<span class="token punctuation">.</span>sh | sh\n</code></pre>\n<p><img src="../assets/myreadme/1.png" alt="Install Deno"></p>\n<p>Then, install the latest version of <a href="https://github.com/xcatliu/pagic">Pagic</a>  :</p>\n<pre class="language-autoit"><code class="language-autoit">deno install <span class="token operator">-</span><span class="token operator">-</span>unstable <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>read <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>write <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>net <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>run <span class="token operator">-</span><span class="token operator">-</span>name<span class="token operator">=</span>pagic https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>pagic<span class="token operator">/</span>mod<span class="token punctuation">.</span>ts\n</code></pre>\n<p><img src="../assets/myreadme/2.png" alt="Install Pagic"></p>\n<p>Initialize the <a href="https://github.com/xcatliu/pagic">Pagic</a> project :</p>\n<pre class="language-autoit"><code class="language-autoit">mkdir site <span class="token operator">&amp;</span><span class="token operator">&amp;</span> cd site <span class="token operator">&amp;</span><span class="token operator">&amp;</span> echo <span class="token string">"export default {};"</span> <span class="token operator">></span> pagic<span class="token punctuation">.</span>config<span class="token punctuation">.</span>ts <span class="token operator">&amp;</span><span class="token operator">&amp;</span> echo <span class="token string">"# Hello world"</span> <span class="token operator">></span> README<span class="token punctuation">.</span>md\n</code></pre>\n<p><img src="../assets/myreadme/3.png" alt="Pagic init"></p>\n<p>Run pagic build:</p>\n<pre class="language-autoit"><code class="language-autoit">pagic build <span class="token operator">-</span><span class="token operator">-</span>watch <span class="token operator">-</span><span class="token operator">-</span>serve\n</code></pre>\n<p>Now you can see the page of <strong>Hello world</strong> by visiting <code>127.0.0.1:8000</code>：</p>\n<p><img src="../assets/myreadme/4.png" alt="Pagic build"></p>\n<h2 id="vercel">Vercel<a class="anchor" href="#vercel">§</a></h2>\n<p><a href="https://vercel.com/">Vercel</a> is a cloud platform for static sites and serverless functions, which fully conforms to your workflow. It enables developers to host websites and web services, which can be deployed instantly, expanded automatically, and without any supervision, all of which do not need to be configured.</p>\n<p>Deploy to [Versel](<a href="https://vercel.com/%EF%BC%89We">https://vercel.com/）We</a> need to create a file like <code>deploy-vercel.sh</code>:</p>\n<pre class="language-autoit"><code class="language-autoit">!<span class="token operator">/</span>bin<span class="token operator">/</span>sh\n\n# Install deno\ncurl <span class="token operator">-</span>fsSL https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>install<span class="token operator">/</span>install<span class="token punctuation">.</span>sh | sh\n\n# Install pagic\n<span class="token operator">/</span>vercel<span class="token operator">/</span><span class="token punctuation">.</span>deno<span class="token operator">/</span>bin<span class="token operator">/</span>deno install <span class="token operator">-</span><span class="token operator">-</span>unstable <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>read <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>write <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>net https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>pagic<span class="token operator">/</span>mod<span class="token punctuation">.</span>ts\n\n# Pagic build\n<span class="token operator">/</span>vercel<span class="token operator">/</span><span class="token punctuation">.</span>deno<span class="token operator">/</span>bin<span class="token operator">/</span>deno run <span class="token operator">-</span><span class="token operator">-</span>unstable <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>read <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>write <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>net <span class="token operator">-</span><span class="token operator">-</span>allow<span class="token operator">-</span>run https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>pagic<span class="token operator">/</span>mod<span class="token punctuation">.</span>ts build\n</code></pre>\n<p>Then create the <code>package.json</code> :</p>\n<pre class="language-autoit"><code class="language-autoit">{\n    <span class="token string">"scripts"</span><span class="token punctuation">:</span> {\n        <span class="token string">"deploy:vercel"</span><span class="token punctuation">:</span> <span class="token string">"sh deploy-vercel.sh"</span>\n    }\n}\n</code></pre>\n<p>Vercel supports GitHub, Gitlab, Bitbucket and other login methods：</p>\n<p><img src="../assets/myreadme/5.png" alt="Vercal login"></p>\n<p>I use GitHub a lot, so I build a new repository on GitHub named <code>pagic_template</code> :</p>\n<p><img src="../assets/myreadme/6.png" alt="Creat new repository"></p>\n<p>Then submit the local code to Github：</p>\n<p><img src="../assets/myreadme/7.png" alt="Pagic commit to Github"></p>\n<p>Next, complete the following steps on the <a href="https://vercel.com/">Vercel</a> website:</p>\n<ol>\n<li>On <a href="https://vercel.com/dashboard">Home</a>, click Import Project</li>\n<li><a href="https://vercel.com/import/git">Fill in</a> warehouse address, from Github <a href="https://vercel.com/import">import</a> the warehouse to be deployed, click continue</li>\n<li>Configure project information</li>\n</ol>\n<ul>\n<li>Fill in the project name, the framework defaults to Other</li>\n<li>Packaging and output configuration, build command: <code>npm run deploy:vercel</code> Output directory: <code>dist</code> (You can also fill in according to your own configuration)</li>\n</ul>\n<p><img src="../assets/myreadme/8.png" alt="Pagic Package"></p>\n<ol start="4">\n<li>Click Deploy and wait for the deployment to complete to access 🎊 :</li>\n</ol>\n<p><img src="../assets/myreadme/9.png" alt="Vercal Deploy"></p>\n<h2 id="blog">Blog<a class="anchor" href="#blog">§</a></h2>\n<p>Currently, Pagic supports three themes: Default, DOC, Blog, we try to modify the <code>pagic.config.ts</code> file to enable Pagic\'s blog mode:</p>\n<pre class="language-autoit"><code class="language-autoit">export <span class="token keyword">default</span> {\n    theme<span class="token punctuation">:</span> <span class="token string">\'blog\'</span><span class="token punctuation">,</span>\n    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'blog\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'pagic template\'</span><span class="token punctuation">,</span>\n    description<span class="token punctuation">:</span> <span class="token string">\'Use this template to create a Pagic site with the blog theme.\'</span><span class="token punctuation">,</span>\n    github<span class="token punctuation">:</span> <span class="token string">\'<a class="token url-link" href="https://github.com/hu-qi/pagic_template">https://github.com/hu-qi/pagic_template</a>\'</span><span class="token punctuation">,</span>\n    blog<span class="token punctuation">:</span> {\n        root<span class="token punctuation">:</span> <span class="token string">\'/posts/\'</span><span class="token punctuation">,</span>\n        social<span class="token punctuation">:</span> {\n          github<span class="token punctuation">:</span> <span class="token string">\'hu-qi/pagic_template\'</span><span class="token punctuation">,</span>\n          email<span class="token punctuation">:</span> <span class="token string">\'<a class="token email-link" href="mailto:huqi@gpdi.com">huqi@gpdi.com</a>\'</span><span class="token punctuation">,</span>\n          twitter<span class="token punctuation">:</span> <span class="token string">\'huqii\'</span><span class="token punctuation">,</span>\n          v2ex<span class="token punctuation">:</span> <span class="token string">\'huqi\'</span><span class="token punctuation">,</span>\n          zhihu<span class="token punctuation">:</span> <span class="token string">\'fashaoge\'</span>\n        }\n      }\n}<span class="token comment">;</span>\n\n</code></pre>\n<p>In the above code, we have configured Title, description and other parameters for the blog. Among them, social can configure our social accounts. By default, it supports Github, Email, Twitter, V2ex, Zhihu. Of course, you can also develop your own themes or plug-ins to customize What you want.\n<img src="../assets/myreadme/10.png" alt="Pagic Nav"></p>\n<p>Then we started to improve the navigation, classification, tags, external links, etc. that are commonly used in blogs. At this time, we need to add some directories, such as about, archive, links, etc., for unified management, we put all these folders in the src directory Below, our directory structure is as follows:</p>\n<pre class="language-autoit"><code class="language-autoit">site                          \n├─ dist                       <span class="token operator">/</span><span class="token operator">/</span> output   \n├─ src                        <span class="token operator">/</span><span class="token operator">/</span> input\n│  ├─ about                   \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  ├─ archives                \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  ├─ assets                  \n│  ├─ categories              \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  ├─ links                   \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  ├─ posts                   <span class="token operator">/</span><span class="token operator">/</span> maybe write somethings\n│  ├─ tags                    \n│  │  └─ README<span class="token punctuation">.</span>md            \n│  └─ README<span class="token punctuation">.</span>md               <span class="token operator">/</span><span class="token operator">/</span> homepage\n├─ README<span class="token punctuation">.</span>md                  \n├─ deploy<span class="token operator">-</span>vercel<span class="token punctuation">.</span>sh           \n├─ package<span class="token punctuation">.</span>json               \n└─ pagic<span class="token punctuation">.</span>config<span class="token punctuation">.</span>ts            \n</code></pre>\n<p>In terms of configuration, we added nav and set srcDir to src:</p>\n<pre class="language-diff"><code class="language-diff">export default {\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span>   srcDir: \'src\',\n<span class="token prefix inserted">+</span>   nav: [\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Homepage\',\n<span class="token prefix inserted">+</span>         link: \'/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-home-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Categories\',\n<span class="token prefix inserted">+</span>         link: \'/categories/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-category-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Tags\',\n<span class="token prefix inserted">+</span>         link: \'/tags/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-tag-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'About\',\n<span class="token prefix inserted">+</span>         link: \'/about/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-about-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Archives\',\n<span class="token prefix inserted">+</span>         link: \'/archives/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-box-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>       {\n<span class="token prefix inserted">+</span>         text: \'Friends\',\n<span class="token prefix inserted">+</span>         link: \'/links/index.html\',\n<span class="token prefix inserted">+</span>         icon: \'czs-link-l\',\n<span class="token prefix inserted">+</span>       },\n<span class="token prefix inserted">+</span>     ],\n</span>}\n</code></pre>\n<p>On the mobile side, Pagic also has a good experience:\n<img src="../assets/myreadme/11.png" alt="Pagic in Mobile"></p>\n<p>Then we write articles in the form of markdown in the posts directory. We can add some fields to the header of the .md file for classification statistics, such as:</p>\n<pre class="language-autoit"><code class="language-autoit"><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\ntitle<span class="token punctuation">:</span> Driven by DeNO <span class="token operator">+</span> react <span class="token operator">and</span> escorted by vercel<span class="token punctuation">,</span> build personal blog at top speed\nauthor<span class="token punctuation">:</span> huqi\ndate<span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">/</span><span class="token number">02</span><span class="token operator">/</span><span class="token number">04</span>\ncover<span class="token punctuation">:</span> <span class="token string">\'<a class="token url-link" href="https://assets.vercel.com/image/upload/v1595320886/front/home/globe-texture.jpg">https://assets.vercel.com/image/upload/v1595320886/front/home/globe-texture.jpg</a>\'</span>\ncategories<span class="token punctuation">:</span>\n<span class="token operator">-</span> Blog\ntags<span class="token punctuation">:</span>\n<span class="token operator">-</span> Deno\n<span class="token operator">-</span> React\n<span class="token operator">-</span> Pagic\n<span class="token operator">-</span> Vercel\n<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>\n</code></pre>\n<p>After writing some articles, our blog looks very rich!</p>\n<p><img src="../assets/myreadme/12.png" alt="Vercal Deploy"></p>\n<p>At this point, when we submit the code to the remote warehouse, it will be automatically deployed to Vercal. In the future, every time we write an article and submit it to the remote warehouse, Vercal will be able to automatically deploy updates, which is great!</p>\n<p>Copy Code, Copy World! <a href="https://github.com/hu-qi/pagic_template">https://github.com/hu-qi/pagic_template</a></p>'
        } }),
    'toc': React.createElement("nav", { key: "0", className: "toc" },
        React.createElement("ol", null,
            React.createElement("li", null,
                React.createElement("a", { href: "#pagic" }, "Pagic")),
            React.createElement("li", null,
                React.createElement("a", { href: "#vercel" }, "Vercel")),
            React.createElement("li", null,
                React.createElement("a", { href: "#blog" }, "Blog")))),
    'author': "huqi",
    'contributors': [
        "huqi"
    ],
    'date': "2021/02/04",
    'updated': null,
    'excerpt': "Pagic Pagic It is a static website generator driven by DeNO + react. It has simple configuration, supports rendering MD / TSX files into static pages, and has a large number of official or third-party themes an...",
    'cover': "https://assets.vercel.com/image/upload/v1595320886/front/home/globe-texture.jpg",
    'categories': [
        "Blog"
    ],
    'tags': [
        "Deno",
        "React",
        "Pagic",
        "Vercel"
    ],
    'blog': {
        "isPost": true,
        "posts": [
            {
                "pagePath": "posts/front_matter_test.md",
                "title": "Front matter test",
                "link": "test_pages/front_matter_test.html",
                "date": "2021-02-04T14:14:04.000Z",
                "updated": null,
                "author": "test",
                "contributors": [
                    "huqi"
                ],
                "excerpt": "This is a front matter test page. The front matter content outputPath: test_pages/front_matter_test.html title: Front matter test toc: null prev: null next: null "
            },
            {
                "pagePath": "posts/myreadme.md",
                "title": "Build personal blog at top speed",
                "link": "posts/myreadme.html",
                "date": "2021/02/04",
                "updated": null,
                "author": "huqi",
                "contributors": [
                    "huqi"
                ],
                "categories": [
                    "Blog"
                ],
                "tags": [
                    "Deno",
                    "React",
                    "Pagic",
                    "Vercel"
                ],
                "excerpt": "Pagic Pagic It is a static website generator driven by DeNO + react. It has simple configuration, supports rendering MD / TSX files into static pages, and has a large number of official or third-party themes an...",
                "cover": "https://assets.vercel.com/image/upload/v1595320886/front/home/globe-texture.jpg"
            },
            {
                "pagePath": "posts/markdown_test.md",
                "title": "Markdown test",
                "link": "posts/markdown_test.html",
                "date": "2021/02/04",
                "updated": "2021年02月04日15:55:59",
                "author": "test",
                "contributors": [
                    "huqi"
                ],
                "categories": null,
                "tags": [
                    "MarkDown",
                    "Test"
                ],
                "excerpt": "This page contains the features about markdown supported by Pagic. GitHub flavored markdown The followed content is copied from https://guides.github.com/features/mastering-markdown/ Text It's very easy to make...",
                "cover": "../assets/hello-world/1.png"
            },
            {
                "pagePath": "posts/hello_world.md",
                "title": "Hello World",
                "link": "posts/hello_world.html",
                "date": "2021/02/03",
                "updated": null,
                "author": "huqi",
                "contributors": [
                    "huqi"
                ],
                "categories": [
                    "Hello World"
                ],
                "tags": [
                    "First"
                ],
                "excerpt": "Hello, my friends!",
                "cover": "/assets/1612406852801-image.png"
            }
        ],
        "categories": [
            {
                "name": "Blog",
                "count": 1
            },
            {
                "name": "Hello World",
                "count": 1
            }
        ],
        "tags": [
            {
                "name": "Deno",
                "count": 1
            },
            {
                "name": "First",
                "count": 1
            },
            {
                "name": "MarkDown",
                "count": 1
            },
            {
                "name": "Pagic",
                "count": 1
            },
            {
                "name": "React",
                "count": 1
            },
            {
                "name": "Test",
                "count": 1
            },
            {
                "name": "Vercel",
                "count": 1
            }
        ]
    }
};
